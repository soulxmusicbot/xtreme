from pyrogram import Client 
from bot import Bot
from config import *
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from database.database import add_user, del_user, full_userbase, present_user

@Bot.on_callback_query()
async def cb_handler(client: Bot, query: CallbackQuery):
    data = query.data 
    if data == "about":
        await query.message.edit_text(
            text=f"""<b><blockquote>‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚çü
‚îú‚û§ ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä  : <a href='t.me/{OWNER_USER}'>·¥õ ú…™s ·¥ò·¥á Äs·¥è…¥</a>
‚îú‚û§  ü…™ ô Ä·¥Ä Äy : <a href=https://github.com/pyrogram>·¥ò è Ä·¥è…¢ Ä·¥Ä·¥ç</a>
‚îú‚û§  ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á : <a href=https://www.python.org>·¥ò è·¥õ ú·¥è…¥ 3</a>
‚îú‚û§ ·¥ç è ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás : <a href=https://t.me/XtremeBotd>Xtreme  ô·¥è·¥õs</a>
‚îú‚û§ ·¥ò·¥Ä…™·¥Ö  ô·¥è·¥õ : <a href=https://t.me/XtremeBots>·Øì Xtreme Bots ·°£ê≠©</a>
‚îú‚û§ ·¥Ö·¥á·¥† ü·¥è·¥ò·¥á Ä : <a href=https://t.me/XtremeBots>·Øì Xtreme Bots·°£ê≠©</a>
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚çü</blockquote></b>""",
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup(
                [ [ InlineKeyboardButton("s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á", callback_data ="source"),
                  InlineKeyboardButton("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü" , callback_data = "main")],
                 [InlineKeyboardButton("Anime channel", url = "https://t.me/AniXtreme")],
                    [
                        InlineKeyboardButton(" ú·¥è·¥ç·¥á", callback_data = "start"),
                        InlineKeyboardButton(" ·¥Ñ ü·¥ès·¥á ", callback_data = "close")
                    ]
                ]
            )
        )
    elif data == "start":
        await query.message.edit_text(
            text=START_MSG.format(first=query.from_user.first_name),
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup(
                [
                    [ InlineKeyboardButton(text="üèñÔ∏è", callback_data="about"),
                    InlineKeyboardButton(text="üçÇ", callback_data="about"),
                    InlineKeyboardButton(text="‚ö†Ô∏è", callback_data="me"),
                    InlineKeyboardButton(text="üí∏", callback_data="about"),
                    InlineKeyboardButton(text="üé≠", callback_data="about"),
                ],[ InlineKeyboardButton( "·¥ç·¥Ä…™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü", callback_data = "main" ),
                    InlineKeyboardButton("s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á ", callback_data = "source")
                ], [ InlineKeyboardButton("Anime channel", url = "http://t.me/Anixtreme") ],
                [
                    InlineKeyboardButton(" ú·¥á ü·¥ò", callback_data = "help"),
                    InlineKeyboardButton("·¥Ä ô·¥è·¥ú·¥õ", callback_data = "about")
                ]
            ]
            )
        )
    
    elif data == "close":
        await query.message.delete()
        try:
            await query.message.reply_to_message.delete()
        except:
            pass
      
    elif data == "main":
        await query.message.edit_text(
            text=f"<blockquote> ú·¥á ü ü·¥è ·¥ç è ·¥ús·¥á Äs ·¥ç è ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á & ·¥ç·¥Ä…™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü …™s …¢…™·¥†·¥á…¥  ô·¥á ü·¥è·¥°.</blockquote>",
            disable_web_page_preview=True,
            reply_markup = InlineKeyboardMarkup(
                [   
                    [
                        InlineKeyboardButton("·¥ç·¥Ä…™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url="https://t.me/Anixtreme"),
                        InlineKeyboardButton("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü",url = "t.me/XtremeBots")
                    ],
                    [   InlineKeyboardButton(" ú·¥è·¥ç·¥á ", callback_data = "start"), 
                        InlineKeyboardButton("·¥Ñ ü·¥ès·¥á ", callback_data = "close")
                    ]
                ]
            )
        )
    elif data == "me":
            await query.message.edit(
                text=f"<b>·¥õ ú…™s s·¥á·¥Ñ·¥õ…™·¥è…¥ …™s ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ·¥è…¥ ü è “ì·¥è Ä ·¥Ä·¥Ö·¥ç…™…¥s & ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä</b>",
                disable_web_page_preview=True,
                reply_markup = InlineKeyboardMarkup(
                    [
                        [  InlineKeyboardButton("·¥Ö·¥á·¥† ü·¥è·¥ò·¥á Ä",url= "t.me/XtremeBots"),
                         InlineKeyboardButton("·¥Ä·¥Ö·¥ç…™…¥",url = "t.me/XtremeBots")],
                        [ InlineKeyboardButton(" ú·¥è·¥ç·¥á", callback_data = "start"),
                         InlineKeyboardButton( "·¥Ñ ü·¥ès·¥á", callback_data = "close")]
                    ]
                )
        )
    elif data == "source":
        await query.message.edit_text(
            text=f"<b><blockquote>·¥ç è s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á …™s ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á\n…™…¥ ·¥õ·¥°·¥è ·¥°·¥Ä ès\n‚òÖ <a herf='https://publicearn.com/GitHub'>…¢…™·¥õ ú·¥ú ô</a> \n‚òÖ <a herf='https://t.me/+Yy9O2e_eJwU3NjRl'>·¥¢…™·¥ò “ì…™ ü·¥á </a></blockquote></b>",
            disable_web_page_preview=True,
            reply_markup = InlineKeyboardMarkup(
                [   
                    [
                        InlineKeyboardButton("…¢…™·¥õ ú·¥ú ô ", url="https://publicearn.com/GitHub"),
                        InlineKeyboardButton("·¥¢…™·¥ò", url="https://t.me/XtremeBots")
                    ],
                    [   InlineKeyboardButton(" ú·¥è·¥ç·¥á" , callback_data = "start"),
                        InlineKeyboardButton(" ·¥Ñ ü·¥ès·¥á", callback_data = "close")
                    ]
                ]
            )
        )
